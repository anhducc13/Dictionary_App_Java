/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dictionary;

import com.darkprograms.speech.synthesiser.Synthesiser;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.advanced.AdvancedPlayer;

/**
 *
 * @author DUYKYPAUL
 */
public class DictionaryForm extends javax.swing.JFrame {

    public static boolean enable = false;
    // list từ tiếng anh để hiển thị ra màn hình
    static DefaultListModel dlmEnglish = new DefaultListModel();

    // vị trí từ đang chọn trong dánh sách hiển thị wordList
    static int indexWordList = 0;

     // vị trí từ trong dah sách wordList
    static int index = 0;
    // từ vựng hiện tại( đang được trỏ tới trong danh sách hiển thị)
    public static Word wordCurrent = new Word();
    

    /**
     * Creates new form DictionaryForm
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public DictionaryForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        //Dictionary.readFile();
        Dictionary.insertWordFromFile();
        // khóa chihr sửa khung hiển thị từ vựng
        showInforTextArea.setEditable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        wordList = new javax.swing.JList<>();
        inputFormat = new javax.swing.JFormattedTextField();
        showInforTextArea = new javax.swing.JTextArea();
        searchButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        inforWordButton = new javax.swing.JButton();
        HistoryButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pronouButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dictionary_ancestor\n");
        setBackground(new java.awt.Color(0, 0, 0));

        wordList.setBackground(new java.awt.Color(153, 153, 255));
        wordList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wordListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(wordList);

        inputFormat.setText("Điền từ.......");
        inputFormat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputFormatMouseClicked(evt);
            }
        });
        inputFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFormatActionPerformed(evt);
            }
        });
        inputFormat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputFormatKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputFormatKeyReleased(evt);
            }
        });

        showInforTextArea.setBackground(new java.awt.Color(153, 153, 255));
        showInforTextArea.setColumns(20);
        showInforTextArea.setRows(5);

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Find.png"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        addButton.setText("Thêm từ");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/remove.png"))); // NOI18N
        deleteButton.setText("Xóa từ");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/rss_edit.png"))); // NOI18N
        editButton.setText("Sửa từ");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Refresh.png"))); // NOI18N
        updateButton.setText("showAll");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        inforWordButton.setBackground(new java.awt.Color(153, 153, 225));
        inforWordButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/archive.png"))); // NOI18N
        inforWordButton.setText("Thông tin từ");
        inforWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inforWordButtonActionPerformed(evt);
            }
        });

        HistoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/History.png"))); // NOI18N
        HistoryButton.setToolTipText("Lịch sử tra từ");
        HistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistoryButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TỪ ĐIỂN ANH-VIỆT");
        jLabel1.setOpaque(true);

        pronouButton.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pronouButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Sound.png"))); // NOI18N
        pronouButton.setText("Phát âm");
        pronouButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pronouButtonActionPerformed(evt);
            }
        });

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Home.png"))); // NOI18N
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(102, 102, 255));
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("HIVETHONGS");
        jLabel2.setOpaque(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/warning.png"))); // NOI18N
        jButton1.setText("EXIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(HistoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputFormat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pronouButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showInforTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .addComponent(inforWordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(homeButton)
                    .addComponent(HistoryButton))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputFormat)
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(inforWordButton)
                                    .addComponent(pronouButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(showInforTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(updateButton)
                                .addGap(20, 20, 20)
                                .addComponent(addButton)
                                .addGap(18, 18, 18)
                                .addComponent(deleteButton)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 17, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 17, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 4, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // reset khung hiển thị thông tin từ vựng
    private void inputFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFormatActionPerformed
        //showInforTextArea.setText("");
    }//GEN-LAST:event_inputFormatActionPerformed

    // in ra toàn bộ thông tin sau khi update
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        dlmEnglish.clear();
        for (int i = 0; i < Dictionary.wordList.size(); i++) {
            dlmEnglish.addElement(Dictionary.wordList.get(i).getWord_target());
        }
        wordList.setModel(dlmEnglish);
    }//GEN-LAST:event_updateButtonActionPerformed

    // xóa từ đang chọn
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        boolean check = true;
        if (wordList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "bạn phải chọn từ trước khi muốn xóa");
        } else {
            indexWordList = wordList.getSelectedIndex();
            int checkExit = JOptionPane.showConfirmDialog(this, "Bạn có chắc là sẽ xóa từ", "remove word?", JOptionPane.YES_NO_OPTION);
            if (checkExit == 0) {
                Dictionary.delWord(wordList.getSelectedValue());
                dlmEnglish.removeElementAt(indexWordList);
            } else {
                setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
            }
            check = false;
        }
        if (!check) {
            showInforTextArea.setText("");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void inputFormatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputFormatMouseClicked
        inputFormat.setText("");
        showInforTextArea.setText("");
        dlmEnglish.clear();
    }//GEN-LAST:event_inputFormatMouseClicked

    private void inputFormatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFormatKeyPressed

    }//GEN-LAST:event_inputFormatKeyPressed

    // load từ liên tục
    private void inputFormatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFormatKeyReleased
        dlmEnglish.clear();
        String s = inputFormat.getText().toLowerCase();
        Dictionary.wordList.stream().filter((ele) -> (ele.getWord_target().indexOf(s) == 0)).forEachOrdered((ele) -> {
            dlmEnglish.addElement(ele.getWord_target());
        });
        wordList.setModel(dlmEnglish);
    }//GEN-LAST:event_inputFormatKeyReleased

    private void inforWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inforWordButtonActionPerformed
        //showInforTextArea.setVisible(true);
    }//GEN-LAST:event_inforWordButtonActionPerformed

    // hàm tìm kiếm từ (button)
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        boolean check = true;
        if (inputFormat.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn cần nhập vào từ muốn tìm kiếm");
            check = false;
        } else {
            for (Word ele : Dictionary.wordList) {
                if (ele.getWord_target().equals(inputFormat.getText().toLowerCase())) {
                    showInforTextArea.append("Từ: " + ele.getWord_target() + "\n\nNghĩa: " + ele.getWord_explain() + "\n");
                    check = false;
                }
            }
        }
        if (check) {
            JOptionPane.showMessageDialog(rootPane, "Từ bạn nhập không có trong danh sách từ điển này");
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    // sửa từ vựng
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed

        int size = Dictionary.wordList.size();

        if (!wordList.isSelectionEmpty()) {
            indexWordList = wordList.getSelectedIndex(); // lấy vị trí index của control
            for (int i = 0; i < size; i++) {
                if(wordList.getSelectedValue().equals(Dictionary.wordList.get(i).getWord_target())) {
                    wordCurrent = Dictionary.wordList.get(i);
                    index = i;
                }
            }
            
            new editWordForm().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn cần chọn từ trước");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    // thêm từ 
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        new addWordForm().setVisible(true);
        //this.setEnabled(enable);
    }//GEN-LAST:event_addButtonActionPerformed

    // hiển thị thông tin từ khi nhấn vào từ trong danh sách
    private void wordListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordListMouseClicked
        //inputFormat.setText(wordList.getSelectedValue());
        Dictionary.wordList.stream().filter((ele) -> (ele.getWord_target().equals(wordList.getSelectedValue()))).forEachOrdered((ele) -> {
            showInforTextArea.setText("Từ vựng: \n" + ele.getWord_target() + "\n\nNghĩa: \n" + ele.getWord_explain());
            if (!Dictionary.wordListHistory.contains(ele)) {
                Dictionary.wordListHistory.add(ele);
            }

        });
    }//GEN-LAST:event_wordListMouseClicked

    // hiển thị lịch sử tra từ
    private void HistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistoryButtonActionPerformed
        addButton.setVisible(false);
        editButton.setVisible(false);
        deleteButton.setVisible(false);
        updateButton.setVisible(false);
       
        dlmEnglish.clear();
        Dictionary.wordListHistory.forEach((ele) -> {
            dlmEnglish.addElement(ele.getWord_target());
        });
        wordList.setModel(dlmEnglish);
    }//GEN-LAST:event_HistoryButtonActionPerformed

    // hàm phát âm
    private void pronouButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pronouButtonActionPerformed
        if (wordList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "chọn một từ");
        } else {
            Synthesiser synthesiser = new Synthesiser();
            Thread thread = new Thread(() -> {
                try {
                    AdvancedPlayer player = new AdvancedPlayer(synthesiser.getMP3Data(wordList.getSelectedValue()));
                    player.play();
                } catch (IOException | JavaLayerException e) {
                    JOptionPane.showMessageDialog(rootPane, "Lỗi");
                }
            });
            
            thread.setDaemon(false);
            thread.start();
        }
    }//GEN-LAST:event_pronouButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        addButton.setVisible(true);
        editButton.setVisible(true);
        deleteButton.setVisible(true);
        updateButton.setVisible(true);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int checkExit = JOptionPane.showConfirmDialog(this, "Bạn có chắc là sẽ thoát ứng dụng", "Close app ?", JOptionPane.YES_NO_OPTION);
        if (checkExit == 0) {
            Dictionary.wordListExportToFile();
            System.exit(0);
        } else {
            setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DictionaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DictionaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DictionaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DictionaryForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HistoryButton;
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton inforWordButton;
    private javax.swing.JFormattedTextField inputFormat;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pronouButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextArea showInforTextArea;
    private javax.swing.JButton updateButton;
    private javax.swing.JList<String> wordList;
    // End of variables declaration//GEN-END:variables

}
